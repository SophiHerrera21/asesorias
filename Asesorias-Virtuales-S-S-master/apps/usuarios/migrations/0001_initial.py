# Generated by Django 5.2.3 on 2025-06-18 22:25

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Configuracion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_institucion', models.CharField(default='S&S Asesorías Virtuales', max_length=100)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='config/')),
                ('tiempo_sesion', models.IntegerField(default=30, help_text='Tiempo máximo de sesión en minutos')),
                ('max_intentos_login', models.IntegerField(default=3, help_text='Número máximo de intentos de inicio de sesión')),
                ('tiempo_bloqueo', models.IntegerField(default=30, help_text='Tiempo de bloqueo por intentos fallidos en minutos')),
                ('max_tamano_archivo', models.IntegerField(default=5, help_text='Tamaño máximo de archivos en MB')),
                ('tipos_archivo', models.CharField(default='pdf,doc,docx', help_text='Tipos de archivo permitidos separados por comas', max_length=100)),
            ],
            options={
                'verbose_name': 'Configuración',
                'verbose_name_plural': 'Configuraciones',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('aprendiz', 'Aprendiz'), ('asesor', 'Asesor'), ('coordinador', 'Coordinador')], max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefono', models.CharField(blank=True, max_length=15, null=True)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('imagen_perfil', models.ImageField(blank=True, null=True, upload_to='perfiles/')),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now)),
                ('ultimo_acceso', models.DateTimeField(blank=True, null=True)),
                ('documento', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('estado', models.CharField(choices=[('activo', 'Activo'), ('bloqueado', 'Bloqueado'), ('inactivo', 'Inactivo')], default='activo', max_length=20)),
                ('fecha_bloqueo', models.DateTimeField(blank=True, null=True)),
                ('motivo_bloqueo', models.TextField(blank=True, null=True)),
                ('correo_recuperacion', models.EmailField(blank=True, max_length=254, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Aprendiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ficha', models.CharField(max_length=20)),
                ('programa', models.CharField(max_length=100)),
                ('trimestre', models.CharField(choices=[('1', 'Primer Trimestre'), ('2', 'Segundo Trimestre'), ('3', 'Tercer Trimestre'), ('4', 'Cuarto Trimestre')], default='1', max_length=20)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Asesor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('especialidad', models.CharField(max_length=100)),
                ('experiencia', models.TextField()),
                ('titulo', models.CharField(max_length=100)),
                ('max_grupos', models.IntegerField(default=4)),
                ('disponibilidad', models.TextField()),
                ('activo', models.BooleanField(default=True)),
                ('trimestre', models.CharField(choices=[('1', 'Primer Trimestre'), ('2', 'Segundo Trimestre'), ('3', 'Tercer Trimestre'), ('4', 'Cuarto Trimestre')], default='1', max_length=20)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CodigoRecuperacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=6)),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('usado', models.BooleanField(default=False)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Coordinador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo', models.CharField(max_length=100)),
                ('departamento', models.CharField(max_length=100)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100)),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('activo', models.BooleanField(default=True)),
                ('max_aprendices', models.IntegerField(default=15)),
                ('aprendices', models.ManyToManyField(related_name='grupos', to='usuarios.aprendiz')),
                ('asesor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='grupos', to='usuarios.asesor')),
            ],
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('mensaje', models.TextField()),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('leida', models.BooleanField(default=False)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Prueba',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('fecha_creacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('fecha_limite', models.DateTimeField()),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pruebas', to='usuarios.grupo')),
            ],
        ),
        migrations.CreateModel(
            name='Reunion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('fecha', models.DateTimeField()),
                ('duracion', models.IntegerField(help_text='Duración en minutos')),
                ('link', models.URLField()),
                ('grupo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reuniones', to='usuarios.grupo')),
            ],
        ),
    ]
